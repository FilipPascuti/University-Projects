ID: 12
Execution Stack: [int a ; int b ; int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int a, int b ; int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int a, int b ; int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int b ; int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int b ; int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int b, int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int b, int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int c ; a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int c, a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [int c, a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [a=1 ; b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [a=1, b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [a=1, b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=0, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [b=2 ; c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [b=2, c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [b=2, c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=0, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [c=5 ; switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [c=5, switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [c=5, switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=0}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)} ; print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)}, print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [switch(a * 10) {b * c:print(a) ; print(b);10:print(100) ; print(200); default:print(300)}, print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [if( a * 10 == b * c ) then {print(a) ; print(b)} else {if( a * 10 == 10 ) then {print(100) ; print(200)} else {print(300)}}, print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [if( a * 10 == b * c ) then {print(a) ; print(b)} else {if( a * 10 == 10 ) then {print(100) ; print(200)} else {print(300)}}, print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(a) ; print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(a) ; print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(a), print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(a), print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: []
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: [1]
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(b), print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: [1]
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: [1, 2]
FileTable: {}
Heap: {}

ID: 12
Execution Stack: [print(300)]
Symbol Table: {a=1, b=2, c=5}
Output: [1, 2]
FileTable: {}
Heap: {}

ID: 12
Execution Stack: []
Symbol Table: {a=1, b=2, c=5}
Output: [1, 2, 300]
FileTable: {}
Heap: {}

