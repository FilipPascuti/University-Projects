     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a db 3
    15 00000001 01                          b db 1
    16 00000002 03                          c db 3
    17 00000003 05                          d db 5
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;(a - b) + (d - c)
    23                                          ; al := a - b
    24 00000000 A0[00000000]                    mov al, [a]
    25 00000005 2A05[01000000]                  sub al, [b]
    26                                          ; bl := al = a - b 
    27 0000000B 88C3                            mov bl, al 
    28                                          ; al := d - c  
    29 0000000D A0[03000000]                    mov al, [d]
    30 00000012 2A05[02000000]                  sub al, [c]
    31                                          ;al := al +bl
    32 00000018 00D8                            add al, bl
    33                                          ; exit(0)
    34 0000001A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 0000001C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
