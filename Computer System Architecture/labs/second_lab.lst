     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 02                          b db 2
    16 00000002 06                          c db 6
    17 00000003 0E00                        d dw 14
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ; doing b * c 
    24 00000000 A0[01000000]                    mov al, [b]
    25 00000005 F625[02000000]                  mul byte[c]
    26                                          ; b * 2
    27 0000000B 6689C2                          mov dx, ax
    28 0000000E B002                            mov al, 2
    29 00000010 F625[01000000]                  mul byte[b]
    30                                          ; d + b * 2
    31 00000016 660305[03000000]                add ax, [d] 
    32                                          ; - b * c
    33 0000001D 6629D0                          sub ax, dx
    34                                          ; : a
    35 00000020 F635[00000000]                  div byte[a]
    36                                          ; al = q, ah = r
    37                                          ; exit(0)
    38 00000026 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000028 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
